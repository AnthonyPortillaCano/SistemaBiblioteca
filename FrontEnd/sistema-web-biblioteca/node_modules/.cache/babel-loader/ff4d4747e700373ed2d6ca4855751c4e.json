{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Equipo\\\\Downloads\\\\reactjs-crud-using-jwt-auth-master\\\\reactjs-crud-using-jwt-auth-master\\\\src\\\\components\\\\signup-component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport userService from \"../services/user-service\";\n\nconst required = value => {\n  if (!value) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"This field is required!\");\n  }\n};\n\nconst valEmail = value => {\n  if (!isEmail(value)) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"This is not a valid email.\");\n  }\n}; // const valUsername = value => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\n\nconst valPassword = value => {\n  if (value.length < 5 || value.length > 40) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"The password must be between 6 and 40 characters.\");\n  }\n};\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      clave: e.target.value\n    });\n  }\n\n  handleSignUp(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      userService.signup(this.state.email, this.state.clave).then(response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"mb-3 row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n      alt: \"profile-img\",\n      className: \"profile-img-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleSignUp,\n      ref: c => {\n        this.form = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, !this.state.successful && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      validations: [required, valEmail],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"clave\",\n      value: this.state.clave,\n      onChange: this.onChangePassword,\n      validations: [required, valPassword],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Sign Up\")))), this.state.message && React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \" \", this.state.message)), React.createElement(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Equipo/Downloads/reactjs-crud-using-jwt-auth-master/reactjs-crud-using-jwt-auth-master/src/components/signup-component.js"],"names":["React","Component","Form","Input","CheckButton","isEmail","userService","required","value","valEmail","valPassword","length","Signup","constructor","props","handleSignUp","bind","onChangeUsername","onChangeEmail","onChangePassword","state","username","email","password","successful","message","e","setState","target","clave","preventDefault","form","validateAll","checkBtn","context","_errors","signup","then","response","data","error","resMessage","toString","render","c","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport userService from \"../services/user-service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst valEmail = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\n// const valUsername = value => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n\nconst valPassword = value => {\n  if (value.length < 5 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSignUp= this.handleSignUp.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      clave: e.target.value\n    });\n  }\n\n  handleSignUp(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      userService.signup(\n        this.state.email,\n        this.state.clave\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"mb-3 row\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleSignUp}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n            \n                <div className=\"form-group\"> \n                <label htmlFor=\"email\">Email</label>\n                  <Input type=\"text\" className=\"form-control\" name=\"email\" value={this.state.email} onChange={this.onChangeEmail} validations={[required, valEmail]}/>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input type=\"password\" className=\"form-control\" name=\"clave\" value={this.state.clave} onChange={this.onChangePassword} validations={[required, valPassword]}/>\n                </div>\n\n                <br></br>\n                <div className=\"form-group\">\n                  <div class=\"d-flex justify-content-center\">\n                  <button className=\"btn btn-success\">Sign Up</button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\" > {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton style={{ display: \"none\" }} ref={c => { this.checkBtn = c; }}/>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}